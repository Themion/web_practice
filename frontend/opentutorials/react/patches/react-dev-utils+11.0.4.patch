diff --git a/node_modules/react-dev-utils/FileSizeReporter.js b/node_modules/react-dev-utils/FileSizeReporter.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/ForkTsCheckerWebpackPlugin.js b/node_modules/react-dev-utils/ForkTsCheckerWebpackPlugin.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/InlineChunkHtmlPlugin.js b/node_modules/react-dev-utils/InlineChunkHtmlPlugin.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/InterpolateHtmlPlugin.js b/node_modules/react-dev-utils/InterpolateHtmlPlugin.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/LICENSE b/node_modules/react-dev-utils/LICENSE
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/ModuleNotFoundPlugin.js b/node_modules/react-dev-utils/ModuleNotFoundPlugin.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/ModuleScopePlugin.js b/node_modules/react-dev-utils/ModuleScopePlugin.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/README.md b/node_modules/react-dev-utils/README.md
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/WatchMissingNodeModulesPlugin.js b/node_modules/react-dev-utils/WatchMissingNodeModulesPlugin.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/WebpackDevServerUtils.js b/node_modules/react-dev-utils/WebpackDevServerUtils.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/browsersHelper.js b/node_modules/react-dev-utils/browsersHelper.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/chalk.js b/node_modules/react-dev-utils/chalk.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/checkRequiredFiles.js b/node_modules/react-dev-utils/checkRequiredFiles.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/clearConsole.js b/node_modules/react-dev-utils/clearConsole.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/crossSpawn.js b/node_modules/react-dev-utils/crossSpawn.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/errorOverlayMiddleware.js b/node_modules/react-dev-utils/errorOverlayMiddleware.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/eslintFormatter.js b/node_modules/react-dev-utils/eslintFormatter.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/evalSourceMapMiddleware.js b/node_modules/react-dev-utils/evalSourceMapMiddleware.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/formatWebpackMessages.js b/node_modules/react-dev-utils/formatWebpackMessages.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/getCSSModuleLocalIdent.js b/node_modules/react-dev-utils/getCSSModuleLocalIdent.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/getCacheIdentifier.js b/node_modules/react-dev-utils/getCacheIdentifier.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/getProcessForPort.js b/node_modules/react-dev-utils/getProcessForPort.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/getPublicUrlOrPath.js b/node_modules/react-dev-utils/getPublicUrlOrPath.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/globby.js b/node_modules/react-dev-utils/globby.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/ignoredFiles.js b/node_modules/react-dev-utils/ignoredFiles.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/immer.js b/node_modules/react-dev-utils/immer.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/launchEditor.js b/node_modules/react-dev-utils/launchEditor.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/launchEditorEndpoint.js b/node_modules/react-dev-utils/launchEditorEndpoint.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/noopServiceWorkerMiddleware.js b/node_modules/react-dev-utils/noopServiceWorkerMiddleware.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/openBrowser.js b/node_modules/react-dev-utils/openBrowser.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/openChrome.applescript b/node_modules/react-dev-utils/openChrome.applescript
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/printBuildError.js b/node_modules/react-dev-utils/printBuildError.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/printHostingInstructions.js b/node_modules/react-dev-utils/printHostingInstructions.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/redirectServedPathMiddleware.js b/node_modules/react-dev-utils/redirectServedPathMiddleware.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/refreshOverlayInterop.js b/node_modules/react-dev-utils/refreshOverlayInterop.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/typescriptFormatter.js b/node_modules/react-dev-utils/typescriptFormatter.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-dev-utils/webpackHotDevClient.js b/node_modules/react-dev-utils/webpackHotDevClient.js
old mode 100644
new mode 100755
index db87aba..5e7b26f
--- a/node_modules/react-dev-utils/webpackHotDevClient.js
+++ b/node_modules/react-dev-utils/webpackHotDevClient.js
@@ -230,6 +230,18 @@ function canApplyUpdates() {
   return module.hot.status() === 'idle';
 }
 
+function canAcceptErrors() {
+    // NOTE: This var is injected by Webpack's DefinePlugin, and is a boolean instead of string.
+    const hasReactRefresh = process.env.FAST_REFRESH;
+
+    const status = module.hot.status();
+    // React refresh can handle hot-reloading over errors.
+    // However, when hot-reload status is abort or fail,
+    // it indicates the current update cannot be applied safely,
+    // and thus we should bail out to a forced reload for consistency.
+    return hasReactRefresh && ["abort", "fail"].indexOf(status) === -1
+}
+
 // Attempt to update code on the fly, fall back to a hard reload.
 function tryApplyUpdates(onHotUpdateSuccess) {
   if (!module.hot) {
@@ -243,38 +255,40 @@ function tryApplyUpdates(onHotUpdateSuccess) {
   }
 
   function handleApplyUpdates(err, updatedModules) {    
-    // NOTE: This var is injected by Webpack's DefinePlugin, and is a boolean instead of string.
-    const hasReactRefresh = process.env.FAST_REFRESH;
-    const wantsForcedReload = err || !updatedModules || hadRuntimeError;
-    // React refresh can handle hot-reloading over errors.
-    if (!hasReactRefresh && wantsForcedReload) {
-      window.location.reload();
-      return;
-    }
+        const haveErrors = err || hadRuntimeError;
+        // When there is no error but updatedModules is unavailable,
+        // it indicates a critical failure in hot-reloading,
+        // e.g. server is not ready to serve new bundle,
+        // and hence we need to do a forced reload.
+        const needsForcedReload = !err && !updatedModules;
+        if ((haveErrors && !canAcceptErrors()) || needsForcedReload) {
+            window.location.reload();
+            return;
+        }
 
-    if (typeof onHotUpdateSuccess === 'function') {
-      // Maybe we want to do something.
-      onHotUpdateSuccess();
-    }
+        if (typeof onHotUpdateSuccess === 'function') {
+            // Maybe we want to do something.
+            onHotUpdateSuccess();
+        }
 
-    if (isUpdateAvailable()) {
-      // While we were updating, there was a new update! Do it again.
-      tryApplyUpdates();
+        if (isUpdateAvailable()) {
+            // While we were updating, there was a new update! Do it again.
+            tryApplyUpdates();
+        }
     }
-  }
 
-  // https://webpack.github.io/docs/hot-module-replacement.html#check
-  var result = module.hot.check(/* autoApply */ true, handleApplyUpdates);
-
-  // // webpack 2 returns a Promise instead of invoking a callback
-  if (result && result.then) {
-    result.then(
-      function (updatedModules) {
-        handleApplyUpdates(null, updatedModules);
-      },
-      function (err) {
-        handleApplyUpdates(err, null);
-      }
-    );
-  }
+    // https://webpack.github.io/docs/hot-module-replacement.html#check
+    var result = module.hot.check(/* autoApply */ true, handleApplyUpdates);
+
+    // // webpack 2 returns a Promise instead of invoking a callback
+    if (result && result.then) {
+        result.then(
+            function (updatedModules) {
+                handleApplyUpdates(null, updatedModules);
+            },
+            function (err) {
+                handleApplyUpdates(err, null);
+            }
+        );
+    }
 }
